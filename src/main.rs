#![windows_subsystem = "windows"]

use wry::{
    application::{
        event::{Event, StartCause, WindowEvent},
        event_loop::{ControlFlow, EventLoop},
        window::WindowBuilder, dpi
    },
    webview::WebViewBuilder,
};

use tray_icon::{
    menu::{Menu, MenuEvent, MenuItem},
    TrayIconBuilder,
};

use base64::{Engine as _, engine::general_purpose};
use image;

fn main() -> wry::Result<()> {
    let base64_icon: &str = "";

    let icon_window = load_icon_window(base64_icon);

    let event_loop = EventLoop::new();
    let window = WindowBuilder::new()
        .with_title("Yandex Music")
        .with_window_icon(Some(icon_window))
        .with_resizable(false)
        .with_inner_size(dpi::Size::Physical(dpi::PhysicalSize{width: 794, height: 700}))
        .build(&event_loop)?;
    let webview = WebViewBuilder::new(window)?
        .with_url("https://music.yandex.by/home")?
        .build()?;

    let icon = load_icon(base64_icon);

    let tray_menu = Menu::with_items(&[
        &MenuItem::new("Развернуть", true, None),
        &MenuItem::new("Выход", true, None)
    ]);

    let mut _tray_icon = Some(
        TrayIconBuilder::new()
            .with_menu(Box::new(tray_menu))
            .with_tooltip("yandex music")
            .with_icon(icon)
            .build()
            .unwrap(),
    );

    let menu_channel = MenuEvent::receiver();

    event_loop.run(move |event, _, control_flow| {
        *control_flow = ControlFlow::Wait;
    
        match event {
            Event::NewEvents(StartCause::Init) => println!("Wry has started!"),
            Event::WindowEvent {
            event: WindowEvent::CloseRequested,
            ..
            } => {
                webview.window().set_visible(false);
            },
            _ => (),
        }

        if let Ok(event) = menu_channel.try_recv() {

            if event.id == 1000 {
                webview.window().set_visible(true); 
            }

            if event.id == 1001 {
                *control_flow = ControlFlow::Exit
            }
        }
    });
}

fn load_icon(base64_icon: &str) -> tray_icon::icon::Icon {
    let icon_data = general_purpose::STANDARD.decode(base64_icon).unwrap();

    let (icon_rgba, icon_width, icon_height) = {
        let image = image::load_from_memory(&icon_data)
            .expect("Failed to open icon path")
            .into_rgba8();
        let (width, height) = image.dimensions();
        let rgba = image.into_raw();
        (rgba, width, height)
    };
    tray_icon::icon::Icon::from_rgba(icon_rgba, icon_width, icon_height).expect("Failed to open icon")
}

fn load_icon_window(base64_icon: &str) -> wry::application::window::Icon {
    let icon_data = general_purpose::STANDARD.decode(base64_icon).unwrap();

    let (icon_rgba, icon_width, icon_height) = {
        let image = image::load_from_memory(&icon_data)
            .expect("Failed to open icon path")
            .into_rgba8();
        let (width, height) = image.dimensions();
        let rgba = image.into_raw();
        (rgba, width, height)
    };
    wry::application::window::Icon::from_rgba(icon_rgba, icon_width, icon_height).expect("Failed to open icon")
}